3)  Consider the code for the Link, Stack and Queue classes.  Note Stack and Queue are not complete.

---------------------------------------------------------------
public class Link{
  Object thing;
  Link next;
}
---------------------------------------------------------------


----------------------------------------------------------------
public class Stack{
  Link head;
  int length=0;
  
  public Stack(Link first){
    head=first;
    length=1;}
  
  public void push(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
   public Link peek(Link newlink){
    return head;}
    
  public Link Pop(){
    Link temp = head;
    head=head.next
    length = length - 1;
    return head; }
  
--------------------------------------------------------------
  
----------------------------------------------------------------
public class Queue{
  Link head;
  int length=0;
 
  public Queue(Link first){
    head=first;
    length=1;} 
    
  public void add(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
  public Link peek(Link newlink){
    Link temp = head;
    for(int i=1; i<length; i++){
        temp=temp.next;}
    return temp;}
  public Link remove(){
    Link temp = this.peek();
    length = length-1
    return temp;}
  
  
--------------------------------------------------------------

a)  Explain what a Stack is.  Specify if it is LIFO or FIFO.
A stack is a linear structure of storing data. Last in first out.
b)  Complete the Stack class by writing the "pop" method.
c)  Explain what a Queue is.  Specify if it is LIFO or FIFO.
A queue is a linear structure of storing data. First in first out.
d)  Complete the Queue class by writing the "peek" and "remove" methods.
